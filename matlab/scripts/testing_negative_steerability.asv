% first we do it in 2d

% set up parameters
N = 6;
capSize = pi/4;

Theta = capSize;

[f,u, bCos, theta] =   steer2dGeneral(Theta,N);
figure; plot(theta, f);

% first verify steerability of a north-pole oriented filter symmetric over
% the x-axis
n=100;

filt = makeSteerFilt(100, f, theta, r0, 5);
figure; imagesc(filt)

steerBasisMat = computeSteerBasis2D(N, nonzeroCoeffBool);
Phi = inv(steerBasisMat);
M = (N+1)*(N+2)/2;
steerFiltVol = makeSteerBasis(filt, M);
testThetaArr = [pi/5.5, 3.7*pi/5, 4.7*pi/4, 5*pi/3];
ntestTheta = numel(testThetaArr);
for itheta = 1:ntestTheta
    % extract desired rotation
    thetaTest = testThetaArr(itheta);
    thetaTestDeg = thetaTest * 180/pi;
    % compute manually with imrotate
    bruteForceRotatedFilt=imrotate(filt, thetaTestDeg, 'bilinear', 'crop');
    
    % compute e^itheta powers
    dirVals = computeSteerDirection2D(N, thetaTest, nonzeroCoeffBool);
    k = real(Phi * dirVals)
    % compute steered filter 
    steerCoeff = reshape(k, [1,1,numel(k)]);
    steeredFilt = sum((steerFiltVol .* steerCoeff), 3);
    % display
    figure; imagesc(bruteForceRotatedFilt);
    figure; imagesc(steeredFilt);
%     figure; mesh(bruteForceRotatedFilt);
%     figure; mesh(steeredFilt);
    approxError = (bruteForceRotatedFilt - steeredFilt);
    tmpDenom = bruteForceRotatedFilt;
    tmpDenom(tmpDenom==0)=1;
    figure; mesh(approxError)
    
end